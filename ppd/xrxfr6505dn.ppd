*PPD-Adobe: "4.3"

*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1987-1996 Adobe Systems Incorporated.
*% All Rights Reserved.
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement

*FileVersion: "1.0"
*FormatVersion: "4.3"
*LanguageEncoding: ISOLatin1
*LanguageVersion: French
*Manufacturer: "Xerox"
*PCFileName: "XR6505DN.PPD"
*Product: "(WorkCentre 6505DN)"
*PSVersion: "(3018.102) 1"
*ShortNickName: "Xerox WorkCentre 6505DN"
*ModelName: "Xerox WorkCentre 6505DN v3018.102 PS"
*NickName: "Xerox WorkCentre 6505DN v3018.102 PS"


*OpenGroup: InstallableOptions/Options install<E9>es

*OpenUI *InstalledMemory/M<E9>moire: PickOne

*DefaultInstalledMemory: 256Meg
*InstalledMemory 256Meg/Standard 256 Mo: ""

*InstalledMemory 512Meg/512 Mo: ""

*InstalledMemory 768Meg/768 Mo: ""

*InstalledMemory 1280Meg/1280 Mo: ""

*?InstalledMemory: "
    save
    (Unknown) currentsystemparams /RamSize get
    dup 134217728 eq{exch pop (256Meg) exch}if
    dup 402653184 eq{exch pop (512Meg) exch}if
    dup 671088640 eq{exch pop (768Meg) exch}if
    dup 1207959552 eq{exch pop (1280Meg) exch}if
    pop = flush
    restore
"
*End
*CloseUI: *InstalledMemory

*OpenUI *XRPaperTrayConfiguration/Configuration des magasins: PickOne

*DefaultXRPaperTrayConfiguration: None
*XRPaperTrayConfiguration None/Magasin 1: ""

*XRPaperTrayConfiguration 1TrayModule/Magasin 2: ""

*?XRPaperTrayConfiguration: "
    save
    currentpagedevice /InputAttributes get dup null eq
    { pop (Unknown) }
    { 1 known
        { (1TrayModule) }{(None)} ifelse
    } ifelse = flush
    restore
"
*End
*CloseUI: *XRPaperTrayConfiguration

*OpenUI *XRHardDisk/Disque RAM: Boolean

*DefaultXRHardDisk: False
*XRHardDisk False/Non disponible: ""

*XRHardDisk True/Disponible: ""

*?XRHardDisk: "
	save
	(%disk0%) /IODevice resourcestatus
		{pop pop (True)} {
			/FXProcs /ProcSet resourcestatus {
			pop pop /FXProcs /ProcSet findresource /currentstorage get exec
			{(True)}{(False)} ifelse
		} {(Unknown)} ifelse
	} ifelse = flush
	restore
"
*End
*CloseUI: *XRHardDisk

*OpenUI *XRDuplexOption/Unit<E9> recto-verso: Boolean

*DefaultXRDuplexOption: True
*XRDuplexOption False/Non disponible: ""

*XRDuplexOption True/Disponible: ""

*?XRDuplexOption: "save currentpagedevice/Duplex known{(True)}{(False)}ifelse = flush restore"
*CloseUI: *XRDuplexOption

*OpenUI *XRColorModeSetting/Mode couleur: PickOne

*DefaultXRColorModeSetting: Color
*XRColorModeSetting Color/Couleur: ""

*XRColorModeSetting Black/Noir: ""

*?XRColorModeSetting: "save(Color)= flush restore"
*CloseUI: *XRColorModeSetting

*CloseGroup: InstallableOptions

*UIConstraints: *XRPaperTrayConfiguration None *InputSlot 2ndTray
*UIConstraints: *InputSlot 2ndTray *XRPaperTrayConfiguration None

*UIConstraints: *XRDuplexOption False *Duplex DuplexNoTumble
*UIConstraints: *XRDuplexOption False *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexNoTumble *XRDuplexOption False
*UIConstraints: *Duplex DuplexTumble *XRDuplexOption False

*UIConstraints: *InstalledMemory 256Meg *Collate True
*UIConstraints: *Collate True *InstalledMemory 256Meg

*UIConstraints: *InstalledMemory 256Meg *XRHardDisk True
*UIConstraints: *XRHardDisk True *InstalledMemory 256Meg

*UIConstraints: *PageSize Env10 *InputSlot 2ndTray
*UIConstraints: *PageSize EnvMonarch *InputSlot 2ndTray
*UIConstraints: *PageSize EnvC5 *InputSlot 2ndTray
*UIConstraints: *PageSize EnvDL *InputSlot 2ndTray
*UIConstraints: *InputSlot 2ndTray *PageSize Env10
*UIConstraints: *InputSlot 2ndTray *PageSize EnvMonarch
*UIConstraints: *InputSlot 2ndTray *PageSize EnvC5
*UIConstraints: *InputSlot 2ndTray *PageSize EnvDL

*UIConstraints: *PageSize A5 *Duplex DuplexNoTumble
*UIConstraints: *PageSize A5 *Duplex DuplexTumble
*UIConstraints: *PageSize B5 *Duplex DuplexNoTumble
*UIConstraints: *PageSize B5 *Duplex DuplexTumble
*UIConstraints: *PageSize Executive *Duplex DuplexNoTumble
*UIConstraints: *PageSize Executive *Duplex DuplexTumble
*UIConstraints: *PageSize Env10 *Duplex DuplexNoTumble
*UIConstraints: *PageSize Env10 *Duplex DuplexTumble
*UIConstraints: *PageSize EnvMonarch *Duplex DuplexNoTumble
*UIConstraints: *PageSize EnvMonarch *Duplex DuplexTumble
*UIConstraints: *PageSize EnvC5 *Duplex DuplexNoTumble
*UIConstraints: *PageSize EnvC5 *Duplex DuplexTumble
*UIConstraints: *PageSize EnvDL *Duplex DuplexNoTumble
*UIConstraints: *PageSize EnvDL *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexNoTumble *PageSize A5
*UIConstraints: *Duplex DuplexTumble *PageSize A5
*UIConstraints: *Duplex DuplexNoTumble *PageSize B5
*UIConstraints: *Duplex DuplexTumble *PageSize B5
*UIConstraints: *Duplex DuplexNoTumble *PageSize Executive
*UIConstraints: *Duplex DuplexTumble *PageSize Executive
*UIConstraints: *Duplex DuplexNoTumble *PageSize Env10
*UIConstraints: *Duplex DuplexTumble *PageSize Env10
*UIConstraints: *Duplex DuplexNoTumble *PageSize EnvMonarch
*UIConstraints: *Duplex DuplexTumble *PageSize EnvMonarch
*UIConstraints: *Duplex DuplexNoTumble *PageSize EnvC5
*UIConstraints: *Duplex DuplexTumble *PageSize EnvC5
*UIConstraints: *Duplex DuplexNoTumble *PageSize EnvDL
*UIConstraints: *Duplex DuplexTumble *PageSize EnvDL
*NonUIConstraints: *CustomPageSize True *Duplex DuplexNoTumble
*NonUIConstraints: *CustomPageSize True *Duplex DuplexTumble
*NonUIConstraints: *Duplex DuplexNoTumble *CustomPageSize True
*NonUIConstraints: *Duplex DuplexTumble *CustomPageSize True

*UIConstraints: *PageSize Env10 *MediaType Stationary
*UIConstraints: *PageSize Env10 *MediaType Prepunched
*UIConstraints: *PageSize Env10 *MediaType Letterhead
*UIConstraints: *PageSize Env10 *MediaType LabelPaper
*UIConstraints: *PageSize Env10 *MediaType ColoredPaper
*UIConstraints: *PageSize EnvMonarch *MediaType Stationary
*UIConstraints: *PageSize EnvMonarch *MediaType Prepunched
*UIConstraints: *PageSize EnvMonarch *MediaType Letterhead
*UIConstraints: *PageSize EnvMonarch *MediaType LabelPaper
*UIConstraints: *PageSize EnvMonarch *MediaType ColoredPaper
*UIConstraints: *PageSize EnvC5 *MediaType Stationary
*UIConstraints: *PageSize EnvC5 *MediaType Prepunched
*UIConstraints: *PageSize EnvC5 *MediaType Letterhead
*UIConstraints: *PageSize EnvC5 *MediaType LabelPaper
*UIConstraints: *PageSize EnvC5 *MediaType ColoredPaper
*UIConstraints: *PageSize EnvDL *MediaType Stationary
*UIConstraints: *PageSize EnvDL *MediaType Prepunched
*UIConstraints: *PageSize EnvDL *MediaType Letterhead
*UIConstraints: *PageSize EnvDL *MediaType LabelPaper
*UIConstraints: *PageSize EnvDL *MediaType ColoredPaper
*UIConstraints: *MediaType Stationary *PageSize Env10
*UIConstraints: *MediaType Prepunched *PageSize Env10
*UIConstraints: *MediaType Letterhead *PageSize Env10
*UIConstraints: *MediaType LabelPaper *PageSize Env10
*UIConstraints: *MediaType ColoredPaper *PageSize Env10
*UIConstraints: *MediaType Stationary *PageSize EnvMonarch
*UIConstraints: *MediaType Prepunched *PageSize EnvMonarch
*UIConstraints: *MediaType Letterhead *PageSize EnvMonarch
*UIConstraints: *MediaType LabelPaper *PageSize EnvMonarch
*UIConstraints: *MediaType ColoredPaper *PageSize EnvMonarch
*UIConstraints: *MediaType Stationary *PageSize EnvC5
*UIConstraints: *MediaType Prepunched *PageSize EnvC5
*UIConstraints: *MediaType Letterhead *PageSize EnvC5
*UIConstraints: *MediaType LabelPaper *PageSize EnvC5
*UIConstraints: *MediaType ColoredPaper *PageSize EnvC5
*UIConstraints: *MediaType Stationary *PageSize EnvDL
*UIConstraints: *MediaType Prepunched *PageSize EnvDL
*UIConstraints: *MediaType Letterhead *PageSize EnvDL
*UIConstraints: *MediaType LabelPaper *PageSize EnvDL
*UIConstraints: *MediaType ColoredPaper *PageSize EnvDL
*UIConstraints: *PageSize A5 *MediaType Prepunched
*UIConstraints: *PageSize A5 *MediaType Letterhead
*UIConstraints: *PageSize B5 *MediaType Prepunched
*UIConstraints: *PageSize B5 *MediaType Letterhead
*UIConstraints: *PageSize Executive *MediaType Prepunched
*UIConstraints: *PageSize Executive *MediaType Letterhead
*UIConstraints: *MediaType Prepunched *PageSize A5
*UIConstraints: *MediaType Letterhead *PageSize A5
*UIConstraints: *MediaType Prepunched *PageSize B5
*UIConstraints: *MediaType Letterhead *PageSize B5
*UIConstraints: *MediaType Prepunched *PageSize Executive
*UIConstraints: *MediaType Letterhead *PageSize Executive


*UIConstraints: *InputSlot BypassTray *MediaType LabelPaper
*UIConstraints: *MediaType LabelPaper *InputSlot BypassTray
*UIConstraints: *InputSlot 1stTray *MediaType CoatingPaper2
*UIConstraints: *InputSlot 1stTray *MediaType CoatingPaper3
*UIConstraints: *MediaType CoatingPaper2 *InputSlot 1stTray
*UIConstraints: *MediaType CoatingPaper3 *InputSlot 1stTray
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaper
*UIConstraints: *InputSlot 2ndTray *MediaType ThickPaper2
*UIConstraints: *InputSlot 2ndTray *MediaType LabelPaper
*UIConstraints: *InputSlot 2ndTray *MediaType SpecialPaper
*UIConstraints: *InputSlot 2ndTray *MediaType CoatingPaper2
*UIConstraints: *InputSlot 2ndTray *MediaType CoatingPaper3
*UIConstraints: *InputSlot 2ndTray *MediaType Envelope
*UIConstraints: *MediaType ThickPaper *InputSlot 2ndTray
*UIConstraints: *MediaType ThickPaper2 *InputSlot 2ndTray
*UIConstraints: *MediaType LabelPaper *InputSlot 2ndTray
*UIConstraints: *MediaType SpecialPaper *InputSlot 2ndTray
*UIConstraints: *MediaType CoatingPaper2 *InputSlot 2ndTray
*UIConstraints: *MediaType CoatingPaper3 *InputSlot 2ndTray
*UIConstraints: *MediaType Envelope *InputSlot 2ndTray

*UIConstraints: *InputSlot 1stTray *XRSubPaperSelection Policy3
*UIConstraints: *InputSlot 1stTray *XRSubPaperSelection Policy5
*UIConstraints: *InputSlot 1stTray *XRSubPaperSelection Policy4
*UIConstraints: *InputSlot 1stTray *XRSubPaperSelection Policy6
*UIConstraints: *InputSlot 2ndTray *XRSubPaperSelection Policy3
*UIConstraints: *InputSlot 2ndTray *XRSubPaperSelection Policy5
*UIConstraints: *InputSlot 2ndTray *XRSubPaperSelection Policy4
*UIConstraints: *InputSlot 2ndTray *XRSubPaperSelection Policy6
*UIConstraints: *XRSubPaperSelection Policy3 *InputSlot 1stTray
*UIConstraints: *XRSubPaperSelection Policy5 *InputSlot 1stTray
*UIConstraints: *XRSubPaperSelection Policy4 *InputSlot 1stTray
*UIConstraints: *XRSubPaperSelection Policy6 *InputSlot 1stTray
*UIConstraints: *XRSubPaperSelection Policy3 *InputSlot 2ndTray
*UIConstraints: *XRSubPaperSelection Policy5 *InputSlot 2ndTray
*UIConstraints: *XRSubPaperSelection Policy4 *InputSlot 2ndTray
*UIConstraints: *XRSubPaperSelection Policy6 *InputSlot 2ndTray

*UIConstraints: *Duplex DuplexNoTumble *MediaType ThickPaper
*UIConstraints: *Duplex DuplexNoTumble *MediaType ThickPaper2
*UIConstraints: *Duplex DuplexNoTumble *MediaType LabelPaper
*UIConstraints: *Duplex DuplexNoTumble *MediaType SpecialPaper
*UIConstraints: *Duplex DuplexNoTumble *MediaType CoatingPaper2
*UIConstraints: *Duplex DuplexNoTumble *MediaType CoatingPaper3
*UIConstraints: *Duplex DuplexNoTumble *MediaType Envelope
*UIConstraints: *Duplex DuplexTumble *MediaType ThickPaper
*UIConstraints: *Duplex DuplexTumble *MediaType ThickPaper2
*UIConstraints: *Duplex DuplexTumble *MediaType LabelPaper
*UIConstraints: *Duplex DuplexTumble *MediaType SpecialPaper
*UIConstraints: *Duplex DuplexTumble *MediaType CoatingPaper2
*UIConstraints: *Duplex DuplexTumble *MediaType CoatingPaper3
*UIConstraints: *Duplex DuplexTumble *MediaType Envelope
*UIConstraints: *MediaType ThickPaper *Duplex DuplexNoTumble
*UIConstraints: *MediaType ThickPaper2 *Duplex DuplexNoTumble
*UIConstraints: *MediaType LabelPaper *Duplex DuplexNoTumble
*UIConstraints: *MediaType SpecialPaper *Duplex DuplexNoTumble
*UIConstraints: *MediaType CoatingPaper2 *Duplex DuplexNoTumble
*UIConstraints: *MediaType CoatingPaper3 *Duplex DuplexNoTumble
*UIConstraints: *MediaType Envelope *Duplex DuplexNoTumble
*UIConstraints: *MediaType ThickPaper *Duplex DuplexTumble
*UIConstraints: *MediaType ThickPaper2 *Duplex DuplexTumble
*UIConstraints: *MediaType LabelPaper *Duplex DuplexTumble
*UIConstraints: *MediaType SpecialPaper *Duplex DuplexTumble
*UIConstraints: *MediaType CoatingPaper2 *Duplex DuplexTumble
*UIConstraints: *MediaType CoatingPaper3 *Duplex DuplexTumble
*UIConstraints: *MediaType Envelope *Duplex DuplexTumble

*UIConstraints: *XRMSILeadingEdge LongEdge *PageSize A4
*UIConstraints: *XRMSILeadingEdge LongEdge *PageSize A5
*UIConstraints: *XRMSILeadingEdge LongEdge *PageSize B5
*UIConstraints: *XRMSILeadingEdge LongEdge *PageSize Letter
*UIConstraints: *XRMSILeadingEdge LongEdge *PageSize FanFoldGermanLegal
*UIConstraints: *XRMSILeadingEdge LongEdge *PageSize Legal
*UIConstraints: *XRMSILeadingEdge LongEdge *PageSize Executive
*UIConstraints: *XRMSILeadingEdge LongEdge *PageSize Env10
*UIConstraints: *XRMSILeadingEdge LongEdge *PageSize EnvMonarch
*UIConstraints: *XRMSILeadingEdge LongEdge *PageSize EnvC5
*UIConstraints: *XRMSILeadingEdge LongEdge *PageSize EnvDL
*UIConstraints: *PageSize A4 *XRMSILeadingEdge LongEdge
*UIConstraints: *PageSize A5 *XRMSILeadingEdge LongEdge
*UIConstraints: *PageSize B5 *XRMSILeadingEdge LongEdge
*UIConstraints: *PageSize Letter *XRMSILeadingEdge LongEdge
*UIConstraints: *PageSize FanFoldGermanLegal *XRMSILeadingEdge LongEdge
*UIConstraints: *PageSize Legal *XRMSILeadingEdge LongEdge
*UIConstraints: *PageSize Executive *XRMSILeadingEdge LongEdge
*UIConstraints: *PageSize Env10 *XRMSILeadingEdge LongEdge
*UIConstraints: *PageSize EnvMonarch *XRMSILeadingEdge LongEdge
*UIConstraints: *PageSize EnvC5 *XRMSILeadingEdge LongEdge
*UIConstraints: *PageSize EnvDL *XRMSILeadingEdge LongEdge

*UIConstraints: *InputSlot BypassTray *Duplex DuplexNoTumble
*UIConstraints: *InputSlot BypassTray *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexNoTumble *InputSlot BypassTray
*UIConstraints: *Duplex DuplexTumble *InputSlot BypassTray
*UIConstraints: *XRMSILeadingEdge LongEdge *PageRegion A4
*UIConstraints: *XRMSILeadingEdge LongEdge *PageRegion A5
*UIConstraints: *XRMSILeadingEdge LongEdge *PageRegion B5
*UIConstraints: *XRMSILeadingEdge LongEdge *PageRegion Letter
*UIConstraints: *XRMSILeadingEdge LongEdge *PageRegion FanFoldGermanLegal
*UIConstraints: *XRMSILeadingEdge LongEdge *PageRegion Legal
*UIConstraints: *XRMSILeadingEdge LongEdge *PageRegion Executive
*UIConstraints: *XRMSILeadingEdge LongEdge *PageRegion Env10
*UIConstraints: *XRMSILeadingEdge LongEdge *PageRegion EnvMonarch
*UIConstraints: *XRMSILeadingEdge LongEdge *PageRegion EnvC5
*UIConstraints: *XRMSILeadingEdge LongEdge *PageRegion EnvDL
*UIConstraints: *PageRegion A4 *XRMSILeadingEdge LongEdge
*UIConstraints: *PageRegion A5 *XRMSILeadingEdge LongEdge
*UIConstraints: *PageRegion B5 *XRMSILeadingEdge LongEdge
*UIConstraints: *PageRegion Letter *XRMSILeadingEdge LongEdge
*UIConstraints: *PageRegion FanFoldGermanLegal *XRMSILeadingEdge LongEdge
*UIConstraints: *PageRegion Legal *XRMSILeadingEdge LongEdge
*UIConstraints: *PageRegion Executive *XRMSILeadingEdge LongEdge
*UIConstraints: *PageRegion Env10 *XRMSILeadingEdge LongEdge
*UIConstraints: *PageRegion EnvMonarch *XRMSILeadingEdge LongEdge
*UIConstraints: *PageRegion EnvC5 *XRMSILeadingEdge LongEdge
*UIConstraints: *PageRegion EnvDL *XRMSILeadingEdge LongEdge
*UIConstraints: *PageRegion Env10 *InputSlot 2ndTray
*UIConstraints: *PageRegion EnvMonarch *InputSlot 2ndTray
*UIConstraints: *PageRegion EnvC5 *InputSlot 2ndTray
*UIConstraints: *PageRegion EnvDL *InputSlot 2ndTray
*UIConstraints: *InputSlot 2ndTray *PageRegion Env10
*UIConstraints: *InputSlot 2ndTray *PageRegion EnvMonarch
*UIConstraints: *InputSlot 2ndTray *PageRegion EnvC5
*UIConstraints: *InputSlot 2ndTray *PageRegion EnvDL
*UIConstraints: *PageRegion A5 *Duplex DuplexNoTumble
*UIConstraints: *PageRegion A5 *Duplex DuplexTumble
*UIConstraints: *PageRegion B5 *Duplex DuplexNoTumble
*UIConstraints: *PageRegion B5 *Duplex DuplexTumble
*UIConstraints: *PageRegion Executive *Duplex DuplexNoTumble
*UIConstraints: *PageRegion Executive *Duplex DuplexTumble
*UIConstraints: *PageRegion Env10 *Duplex DuplexNoTumble
*UIConstraints: *PageRegion Env10 *Duplex DuplexTumble
*UIConstraints: *PageRegion EnvMonarch *Duplex DuplexNoTumble
*UIConstraints: *PageRegion EnvMonarch *Duplex DuplexTumble
*UIConstraints: *PageRegion EnvC5 *Duplex DuplexNoTumble
*UIConstraints: *PageRegion EnvC5 *Duplex DuplexTumble
*UIConstraints: *PageRegion EnvDL *Duplex DuplexNoTumble
*UIConstraints: *PageRegion EnvDL *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexNoTumble *PageRegion A5
*UIConstraints: *Duplex DuplexTumble *PageRegion A5
*UIConstraints: *Duplex DuplexNoTumble *PageRegion B5
*UIConstraints: *Duplex DuplexTumble *PageRegion B5
*UIConstraints: *Duplex DuplexNoTumble *PageRegion Executive
*UIConstraints: *Duplex DuplexTumble *PageRegion Executive
*UIConstraints: *Duplex DuplexNoTumble *PageRegion Env10
*UIConstraints: *Duplex DuplexTumble *PageRegion Env10
*UIConstraints: *Duplex DuplexNoTumble *PageRegion EnvMonarch
*UIConstraints: *Duplex DuplexTumble *PageRegion EnvMonarch
*UIConstraints: *Duplex DuplexNoTumble *PageRegion EnvC5
*UIConstraints: *Duplex DuplexTumble *PageRegion EnvC5
*UIConstraints: *Duplex DuplexNoTumble *PageRegion EnvDL
*UIConstraints: *Duplex DuplexTumble *PageRegion EnvDL
*UIConstraints: *PageRegion Env10 *MediaType Stationary
*UIConstraints: *PageRegion Env10 *MediaType Prepunched
*UIConstraints: *PageRegion Env10 *MediaType Letterhead
*UIConstraints: *PageRegion Env10 *MediaType LabelPaper
*UIConstraints: *PageRegion Env10 *MediaType ColoredPaper
*UIConstraints: *PageRegion EnvMonarch *MediaType Stationary
*UIConstraints: *PageRegion EnvMonarch *MediaType Prepunched
*UIConstraints: *PageRegion EnvMonarch *MediaType Letterhead
*UIConstraints: *PageRegion EnvMonarch *MediaType LabelPaper
*UIConstraints: *PageRegion EnvMonarch *MediaType ColoredPaper
*UIConstraints: *PageRegion EnvC5 *MediaType Stationary
*UIConstraints: *PageRegion EnvC5 *MediaType Prepunched
*UIConstraints: *PageRegion EnvC5 *MediaType Letterhead
*UIConstraints: *PageRegion EnvC5 *MediaType LabelPaper
*UIConstraints: *PageRegion EnvC5 *MediaType ColoredPaper
*UIConstraints: *PageRegion EnvDL *MediaType Stationary
*UIConstraints: *PageRegion EnvDL *MediaType Prepunched
*UIConstraints: *PageRegion EnvDL *MediaType Letterhead
*UIConstraints: *PageRegion EnvDL *MediaType LabelPaper
*UIConstraints: *PageRegion EnvDL *MediaType ColoredPaper
*UIConstraints: *MediaType Stationary *PageRegion Env10
*UIConstraints: *MediaType Prepunched *PageRegion Env10
*UIConstraints: *MediaType Letterhead *PageRegion Env10
*UIConstraints: *MediaType LabelPaper *PageRegion Env10
*UIConstraints: *MediaType ColoredPaper *PageRegion Env10
*UIConstraints: *MediaType Stationary *PageRegion EnvMonarch
*UIConstraints: *MediaType Prepunched *PageRegion EnvMonarch
*UIConstraints: *MediaType Letterhead *PageRegion EnvMonarch
*UIConstraints: *MediaType LabelPaper *PageRegion EnvMonarch
*UIConstraints: *MediaType ColoredPaper *PageRegion EnvMonarch
*UIConstraints: *MediaType Stationary *PageRegion EnvC5
*UIConstraints: *MediaType Prepunched *PageRegion EnvC5
*UIConstraints: *MediaType Letterhead *PageRegion EnvC5
*UIConstraints: *MediaType LabelPaper *PageRegion EnvC5
*UIConstraints: *MediaType ColoredPaper *PageRegion EnvC5
*UIConstraints: *MediaType Stationary *PageRegion EnvDL
*UIConstraints: *MediaType Prepunched *PageRegion EnvDL
*UIConstraints: *MediaType Letterhead *PageRegion EnvDL
*UIConstraints: *MediaType LabelPaper *PageRegion EnvDL
*UIConstraints: *MediaType ColoredPaper *PageRegion EnvDL
*UIConstraints: *PageRegion A5 *MediaType Prepunched
*UIConstraints: *PageRegion A5 *MediaType Letterhead
*UIConstraints: *PageRegion B5 *MediaType Prepunched
*UIConstraints: *PageRegion B5 *MediaType Letterhead
*UIConstraints: *PageRegion Executive *MediaType Prepunched
*UIConstraints: *PageRegion Executive *MediaType Letterhead
*UIConstraints: *MediaType Prepunched *PageRegion A5
*UIConstraints: *MediaType Letterhead *PageRegion A5
*UIConstraints: *MediaType Prepunched *PageRegion B5
*UIConstraints: *MediaType Letterhead *PageRegion B5
*UIConstraints: *MediaType Prepunched *PageRegion Executive
*UIConstraints: *MediaType Letterhead *PageRegion Executive

*% ==== Device Capabilities ===============
*LanguageLevel: "3"
*Protocols: TBCP
*1284Modes Parallel: Compat Nibble ECP
*1284DeviceID: "
MFG:Xerox;CMD:Adobe PostScript 3, PCL;MDL:WorkCentre 6505DN;DES:Xerox WorkCentre 6505DN Color Laser Printer, PostScript 3, Letter/A4 Size;CLS:PRINTER;
"
*End

*FreeVM: "11140352"
*VMOption 256Meg/Standard 256 Mo: "11140352"

*VMOption 512Meg/512 Mo: "11140352"

*VMOption 768Meg/768 Mo: "11140352"

*VMOption 1280Meg/1280 Mo: "11140352"


*ColorDevice: True
*DefaultColorSpace: CMYK
*VariablePaperSize: True
*LandscapeOrientation: Plus90
*TTRasterizer: Type42
*?TTRasterizer: "
save
    42 /FontType resourcestatus
    {pop pop (Type42)}{(No Type42)} ifelse = flush
restore
"
*End
*FileSystem: True
*?FileSystem: "
  save false
   (%disk?%)
   { currentdevparams dup /Writeable known
      { /Writeable get {pop true} if }  { pop } ifelse
    } 10 string /IODevice resourceforall
    {(True)}{(False)} ifelse = flush
 restore
"
*End

*Throughput: "24"
*Password: "()"
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not {
     (WARNING: Cannot modify initial VM.) =
     (Missing or invalid password.) =
     (Please contact the author of this software.) = flush quit
     } if
"
*End
*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not {
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
"
*End

*DefaultResolution: 600dpi
*?Resolution: "
save
    currentpagedevice /HWResolution get dup aload pop eq
    {0 get cvi 9 string cvs print}
    {aload pop exch cvi 9 string cvs print (x) print cvi 9 string cvs print}
    ifelse (dpi) =
restore
"
*End
*AccurateScreensSupport: True
*SuggestedJobTimeout: "0"
*SuggestedWaitTimeout: "300"
*PrintPSErrors: True


*% Halftone Information ===============
*DefaultHalftoneType: 5
*ScreenFreq: "141.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "{180 mul cos exch 180 mul cos add 2 div} bind"
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"
*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"


*% InputSlot Information ================
*RequiresPageRegion BypassTray: True
*RequiresPageRegion 1stTray: True
*RequiresPageRegion 2ndTray: True

*OpenUI *InputSlot/Bac papier: PickOne

*OrderDependency: 50.0 AnySetup *InputSlot
*DefaultInputSlot: 1stTray
*InputSlot BypassTray/Fente d'alimentation manuelle: "1 dict dup/ManualFeed true put setpagedevice"

*InputSlot 1stTray/Magasin 1: "

  currentpagedevice /InputAttributes get dup 0 known
  {0 get dup null eq
   { pop }
   { dup length 4 add dict copy
     dup /DeferredMediaSelection true put
     dup /MediaPosition 0 put
     dup /TraySwitch false put
     dup /ManualFeed false put
     setpagedevice
   } ifelse }
  {pop}
  ifelse
"
*End
*InputSlot 2ndTray/Magasin 2: "

  currentpagedevice /InputAttributes get dup 1 known
  {1 get dup null eq
   { pop }
   { dup length 4 add dict copy
     dup /DeferredMediaSelection true put
     dup /MediaPosition 1 put
     dup /TraySwitch false put
     dup /ManualFeed false put
     setpagedevice
   } ifelse }
  {pop}
  ifelse
"
*End
*?InputSlot: ""
*CloseUI: *InputSlot

*OpenUI *Duplex/Impression recto-verso: PickOne

*OrderDependency: 110.0 AnySetup *Duplex
*DefaultDuplex: DuplexNoTumble
*Duplex None/Impression recto: "

    userdict /$$OEMPreConfigDict known {
        userdict /$$OEMPreConfigDict get /Duplex 2 copy known {
            get exec false
        }{
            pop pop true
        } ifelse
    }{
        true
    } ifelse
    {
        1 dict
        dup /Duplex false put
        setpagedevice
    } if
"
*End
*Duplex DuplexNoTumble/Retourner sur les bords longs: "

    userdict /$$OEMPreConfigDict known {
        userdict /$$OEMPreConfigDict get /Duplex 2 copy known {
            get exec false
        }{
            pop pop true
        } ifelse
    }{
        true
    } ifelse
    {
        2 dict dup /Duplex true put
        dup /Tumble false put setpagedevice
    } if
"
*End
*Duplex DuplexTumble/Retourner sur les bords courts: "

    userdict /$$OEMPreConfigDict known {
        userdict /$$OEMPreConfigDict get /Duplex 2 copy known {
            get exec false
        }{
            pop pop true
        } ifelse
    }{
        true
    } ifelse
    {
        2 dict dup /Duplex true put
        dup /Tumble true put setpagedevice
    } if
"
*End
*?Duplex: "
save
   currentpagedevice /Duplex known
   { currentpagedevice /Duplex get
       { currentpagedevice /Tumble get
          {(DuplexTumble)}{(DuplexNoTumble)}ifelse
       }
       { (None) } ifelse
   }
   { (None)}
   ifelse = flush
restore
"
*End
*CloseUI: *Duplex


*OpenUI *PageSize: PickOne
*OrderDependency: 60.0 AnySetup *PageSize
*DefaultPageSize: A4

*PageSize A4/A4 (210 x 297 mm): "

    6 dict dup /PageSize [595 842] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*PageSize A5/A5 (148 x 210 mm): "

    6 dict dup /PageSize [420 595] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*PageSize B5/B5 (182 x 257 mm): "

    6 dict dup /PageSize [516 729] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*PageSize Letter/Letter (8,5 x 11 pouces): "

    6 dict dup /PageSize [612 792] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*PageSize FanFoldGermanLegal/US Folio (8,5 x 13 pouces): "

    6 dict dup /PageSize [612 936] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*PageSize Legal/Legal (8,5 x 14 pouces): "

    6 dict dup /PageSize [612 1008] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*PageSize Executive/Executive (7,25 x 10,5 pouces): "

    6 dict dup /PageSize [522 756] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*PageSize Env10/Enveloppe commerciale 10: "

    6 dict dup /PageSize [297 684] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*PageSize EnvMonarch/Monarch (3,875 x 7,5 pouces): "

    6 dict dup /PageSize [279 540] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*PageSize EnvC5/Enveloppe C5: "

    6 dict dup /PageSize [459 649] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*PageSize EnvDL/Enveloppe DL: "

    6 dict dup /PageSize [312 624] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*?PageSize: "
  save
   currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if
   (Unknown)
   11 dict
   dup [595 842] (A4) put
   dup [420 595] (A5) put
   dup [516 729] (B5) put
   dup [612 792] (Letter) put
   dup [612 936] (FanFoldGermanLegal) put
   dup [612 1008] (Legal) put
   dup [522 756] (Executive) put
   dup [297 684] (Env10) put
   dup [279 540] (EnvMonarch) put
   dup [459 649] (EnvC5) put
   dup [312 624] (EnvDL) put
   { exch aload pop 4 index sub abs 5 le exch
   5 index sub abs 5 le and
      {exch pop exit} {pop} ifelse
   } bind forall
   = flush pop pop
   restore
"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion: PickOne
*OrderDependency: 80.0 AnySetup *PageRegion
*DefaultPageRegion: A4

*PageRegion A4/A4 (210 x 297 mm): "

    6 dict dup /PageSize [595 842] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*PageRegion A5/A5 (148 x 210 mm): "

    6 dict dup /PageSize [420 595] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*PageRegion B5/B5 (182 x 257 mm): "

    6 dict dup /PageSize [516 729] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*PageRegion Letter/Letter (8,5 x 11 pouces): "

    6 dict dup /PageSize [612 792] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*PageRegion FanFoldGermanLegal/US Folio (8,5 x 13 pouces): "

    6 dict dup /PageSize [612 936] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*PageRegion Legal/Legal (8,5 x 14 pouces): "

    6 dict dup /PageSize [612 1008] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*PageRegion Executive/Executive (7,25 x 10,5 pouces): "

    6 dict dup /PageSize [522 756] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*PageRegion Env10/Enveloppe commerciale 10: "

    6 dict dup /PageSize [297 684] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*PageRegion EnvMonarch/Monarch (3,875 x 7,5 pouces): "

    6 dict dup /PageSize [279 540] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*PageRegion EnvC5/Enveloppe C5: "

    6 dict dup /PageSize [459 649] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*PageRegion EnvDL/Enveloppe DL: "

    6 dict dup /PageSize [312 624] put dup /ImagingBBox null put
    dup /LeadingEdge null put
    dup /MediaClass null put currentpagedevice
    dup /MediaPosition get null eq
    {/Policies 2 copy known
      {get /PageSize 2 copy known
        {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
        {pop pop} ifelse
      }{pop pop} ifelse
    }{pop} ifelse setpagedevice
"
*End
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: A4

*ImageableArea A4/A4 (210 x 297 mm): "11.62 11.62 583.65 830.27 "

*ImageableArea A5/A5 (148 x 210 mm): "11.62 11.62 407.91 583.65 "

*ImageableArea B5/B5 (182 x 257 mm): "11.62 11.62 504.28 716.88 "

*ImageableArea Letter/Letter (8,5 x 11 pouces): "11.62 11.62 600.38 780.38 "

*ImageableArea FanFoldGermanLegal/US Folio (8,5 x 13 pouces): "11.62 11.62 600.38 924.38 "

*ImageableArea Legal/Legal (8,5 x 14 pouces): "11.62 11.62 600.38 996.38 "

*ImageableArea Executive/Executive (7,25 x 10,5 pouces): "11.62 11.62 510.52 744.38 "

*ImageableArea Env10/Enveloppe commerciale 10: "11.62 11.62 285.45 672.38 "

*ImageableArea EnvMonarch/Monarch (3,875 x 7,5 pouces): "11.62 11.62 267.31 528.38 "

*ImageableArea EnvC5/Enveloppe C5: "11.62 11.62 447.59 637.51 "

*ImageableArea EnvDL/Enveloppe DL: "11.62 17.01 300.19 606.61 "

*?ImageableArea: "
save
   3 dict begin
   /cvp { (                ) cvs print ( ) print } bind def
   /upperright {10000 mul floor 10000 div} bind def
   /lowerleft {10000 mul ceiling 10000 div} bind def
   newpath clippath pathbbox
   4 -2 roll exch 2 {lowerleft cvp} repeat
   exch 2 {upperright cvp} repeat (\n) print flush
   end
restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: A4

*PaperDimension A4/A4 (210 x 297 mm): "595 842"

*PaperDimension A5/A5 (148 x 210 mm): "420 595"

*PaperDimension B5/B5 (182 x 257 mm): "516 729"

*PaperDimension Letter/Letter (8,5 x 11 pouces): "612 792"

*PaperDimension FanFoldGermanLegal/US Folio (8,5 x 13 pouces): "612 936"

*PaperDimension Legal/Legal (8,5 x 14 pouces): "612 1008"

*PaperDimension Executive/Executive (7,25 x 10,5 pouces): "522 756"

*PaperDimension Env10/Enveloppe commerciale 10: "297 684"

*PaperDimension EnvMonarch/Monarch (3,875 x 7,5 pouces): "279 540"

*PaperDimension EnvC5/Enveloppe C5: "459 649"

*PaperDimension EnvDL/Enveloppe DL: "312 624"


*% Custom Page Sizes ===================
*% min: 216 pts x 360 pts   (76.2mm * 127mm)
*% max: 612 pts x 1008 pts  (8.66 inch * 14.00 inch)
*HWMargins: 11 11 11 11
*LeadingEdge Short: ""
*DefaultLeadingEdge: Short
*MaxMediaWidth: "612"
*MaxMediaHeight: "1008"
*NonUIOrderDependency: 80.0 AnySetup *CustomPageSize
*CustomPageSize True: "
4 dict dup /LeadingEdge null put
dup /MediaClass null put currentpagedevice
dup /MediaPosition get null eq
{/Policies 2 copy known
  {get /PageSize 2 copy known
    {get dup 3 ge exch 6 le and {dup /DeferredMediaSelection false put} if}
    {pop pop} ifelse
  }{pop pop} ifelse
}{pop} ifelse setpagedevice
userdict /4.3PPDCompliant known
    {userdict /4.3PPDCompliant get } {false} ifelse
{ % From Print Managers complying with 4.3 PPD Spec.
  pop pop pop % discard orientation & offsets
  3 dict begin
    /PageSize [
      4 -2 roll
    ] def
  /ImagingBBox null def
  currentdict end setpagedevice
}{ % From Print Managers not complying with 4.3 PPD Spec.
  pop pop pop % discard orientation & offsets
  3 dict begin
    /PageSize [
      4 -2 roll exch
    ] def
  /ImagingBBox null def
  currentdict end setpagedevice
} ifelse
"
*End

*ParamCustomPageSize Height:       1 points 360 1008
*ParamCustomPageSize Width:        2 points 216 612
*ParamCustomPageSize WidthOffset:  3 points 0 0
*ParamCustomPageSize HeightOffset: 4 points 0 0
*ParamCustomPageSize Orientation:  5 int 1 1

*OpenGroup: Graphics/1. Qualit<E9> d'impression<2F>Couleur

*OpenUI *XRColorMode/Couleur de sortie: PickOne

*OrderDependency: 20.0 AnySetup *XRColorMode
*DefaultXRColorMode: Color
*XRColorMode Color/Couleur: "

    userdict /$$OEMPreConfigDict known {
        userdict /$$OEMPreConfigDict get /ColorMode 2 copy known {
            get exec false
        }{
            pop pop true
        } ifelse
    }{
        true
    } ifelse
    {
        1 dict dup /ProcessColorModel /DeviceCMYK put setpagedevice
    } if
"
*End
*XRColorMode Black/Noir et blanc: "

    userdict /$$OEMPreConfigDict known {
        userdict /$$OEMPreConfigDict get /ColorMode 2 copy known {
            get exec false
        }{
            pop pop true
        } ifelse
    }{
        true
    } ifelse
    {
        1 dict dup /ProcessColorModel /DeviceGray put setpagedevice
    } if
"
*End
*?XRColorMode: "save currentpagedevice/ProcessColorModel get cvn/DeviceGray eq{(Black)}{(Color)}ifelse = flush restore"
*CloseUI: *XRColorMode

*OpenUI *XROutputMode/Qualit<E9> image: PickOne

*OrderDependency: 10.0 AnySetup *XROutputMode
*DefaultXROutputMode: HighSpeed
*XROutputMode HighSpeed/Standard: "

    2 dict dup /HWResolution [600 600] put
    dup 2 dict dup /Type 26 put dup /ValuesPerColorComponent 2 put
    /DeviceRenderingInfo exch put
    setpagedevice
"
*End
*XROutputMode HighQuality/Am<E9>lior<E9>: "

    2 dict dup /HWResolution [600 600] put
    dup 2 dict dup /Type 26 put dup /ValuesPerColorComponent 16 put
    /DeviceRenderingInfo exch put
    setpagedevice
"
*End
*?XROutputMode: ""
*CloseUI: *XROutputMode

*OpenUI *XRBrightness/Luminosit<E9>: PickOne

*OrderDependency: 26.0 AnySetup *XRBrightness
*DefaultXRBrightness: Normal
*XRBrightness Bright5/Plus clair (+5): "1 dict dup 2 dict dup/Type 26 put dup/Brightness 5 put/DeviceRenderingInfo exch put setpagedevice"

*XRBrightness Bright4/Plus clair (+4): "1 dict dup 2 dict dup/Type 26 put dup/Brightness 4 put/DeviceRenderingInfo exch put setpagedevice"

*XRBrightness Bright3/Plus clair (+3): "1 dict dup 2 dict dup/Type 26 put dup/Brightness 3 put/DeviceRenderingInfo exch put setpagedevice"

*XRBrightness Bright2/Plus clair (+2): "1 dict dup 2 dict dup/Type 26 put dup/Brightness 2 put/DeviceRenderingInfo exch put setpagedevice"

*XRBrightness Bright1/Plus clair (+1): "1 dict dup 2 dict dup/Type 26 put dup/Brightness 1 put/DeviceRenderingInfo exch put setpagedevice"

*XRBrightness Normal/Normal: "1 dict dup 2 dict dup/Type 26 put dup/Brightness 0 put/DeviceRenderingInfo exch put setpagedevice"

*XRBrightness Dark1/Plus fonc<E9> (-1): "1 dict dup 2 dict dup/Type 26 put dup/Brightness -1 put/DeviceRenderingInfo exch put setpagedevice"

*XRBrightness Dark2/Plus fonc<E9> (-2): "1 dict dup 2 dict dup/Type 26 put dup/Brightness -2 put/DeviceRenderingInfo exch put setpagedevice"

*XRBrightness Dark3/Plus fonc<E9> (-3): "1 dict dup 2 dict dup/Type 26 put dup/Brightness -3 put/DeviceRenderingInfo exch put setpagedevice"

*XRBrightness Dark4/Plus fonc<E9> (-4): "1 dict dup 2 dict dup/Type 26 put dup/Brightness -4 put/DeviceRenderingInfo exch put setpagedevice"

*XRBrightness Dark5/Plus fonc<E9> (-5): "1 dict dup 2 dict dup/Type 26 put dup/Brightness -5 put/DeviceRenderingInfo exch put setpagedevice"

*?XRBrightness: "
save
  currentpagedevice /DeviceRenderingInfo 2 copy known {
    get dup /Type get 26 eq {
      /Brightness get
      11 dict
      dup 5 (Bright5) put
      dup 4 (Bright4) put
      dup 3 (Bright3) put
      dup 2 (Bright2) put
      dup 1 (Bright1) put
      dup 0 (Normal) put
      dup -1 (Dark1) put
      dup -2 (Dark2) put
      dup -3 (Dark3) put
      dup -4 (Dark4) put
      dup -5 (Dark5) put
      exch get
    }
    {pop (Unknown)} ifelse
  }
  {pop pop (Unknown)} ifelse
  = flush
restore
"
*End
*CloseUI: *XRBrightness

*OpenUI *XRRGBImageType/Correction des couleurs: PickOne

*OrderDependency: 25.0 AnySetup *XRRGBImageType
*DefaultXRRGBImageType: Standard
*XRRGBImageType Standard/Automatique: "1 dict dup 2 dict dup/Type 26 put dup/RGBCorrection 3 put/DeviceRenderingInfo exch put setpagedevice"

*XRRGBImageType Photo/Affichage sRVB: "1 dict dup 2 dict dup/Type 26 put dup/RGBCorrection 1 put/DeviceRenderingInfo exch put setpagedevice"

*XRRGBImageType Presentation/sRVB Vive: "1 dict dup 2 dict dup/Type 26 put dup/RGBCorrection 4 put/DeviceRenderingInfo exch put setpagedevice"

*XRRGBImageType sRGB/<C9>cran LCD: "1 dict dup 2 dict dup/Type 26 put dup/RGBCorrection 2 put/DeviceRenderingInfo exch put setpagedevice"

*XRRGBImageType Off/Aucun(e): "1 dict dup 2 dict dup/Type 26 put dup/RGBCorrection 0 put/DeviceRenderingInfo exch put setpagedevice"

*?XRRGBImageType: "
save
  currentpagedevice /DeviceRenderingInfo 2 copy known {
    get dup /Type get 26 eq {
      /RGBCorrection get
      [(Off)(Photo)(sRGB)(Standard)(Presentation)] exch get
    }
    {pop (Unknown)} ifelse
  }
  {pop pop (Unknown)} ifelse
  = flush
restore
"
*End
*CloseUI: *XRRGBImageType

*OpenUI *XREngineScreen/Ecran: PickOne

*OrderDependency: 27.0 AnySetup *XREngineScreen
*DefaultXREngineScreen: Auto
*XREngineScreen Auto/Automatique: "

  1 dict dup
  /PostRenderingEnhanceDetails 2 dict
  dup /Type 32 put dup /EngineScreen 2 put put
  dup /PostRenderingEnhance true put setpagedevice
"
*End
*XREngineScreen Screen1/Finesse: "

  1 dict dup
  /PostRenderingEnhanceDetails 2 dict
  dup /Type 32 put dup /EngineScreen 0 put put
  dup /PostRenderingEnhance true put setpagedevice
"
*End
*XREngineScreen Screen3/Standard: "

  1 dict dup
  /PostRenderingEnhanceDetails 2 dict
  dup /Type 32 put dup /EngineScreen 1 put put
  dup /PostRenderingEnhance true put setpagedevice
"
*End
*XREngineScreen Screen2/Gradation: "

  1 dict dup
  /PostRenderingEnhanceDetails 2 dict
  dup /Type 32 put dup /EngineScreen 3 put put
  dup /PostRenderingEnhance true put setpagedevice
"
*End
*?XREngineScreen: "
save
  currentpagedevice /PostRenderingEnhanceDetails 2 copy known {
    get dup /Type get 32 eq {
      /EngineScreen get [(Screen1) (Screen2) (Auto) (Screen3)] exch get
    }
    {pop (Unknown)} ifelse
  }
  {pop pop (Unknown)} ifelse
  = flush
restore
"
*End
*CloseUI: *XREngineScreen
*CloseGroup: Graphics

*OpenGroup: ColorAdjustment/2. Equilibrage des couleurs

*OpenUI *XRRGBCorrection/Correction des couleurs RVB: PickOne

*OrderDependency: 27.0 AnySetup *XRRGBCorrection
*DefaultXRRGBCorrection: None
*XRRGBCorrection Perceptual/Perceptuel: "1 dict dup 2 dict dup/Type 26 put dup/RGBCorrection 10 put/DeviceRenderingInfo exch put setpagedevice"

*XRRGBCorrection Saturation/Saturation: "1 dict dup 2 dict dup/Type 26 put dup/RGBCorrection 11 put/DeviceRenderingInfo exch put setpagedevice"

*XRRGBCorrection RelativeC/Colorim<E9>trique relatif: "1 dict dup 2 dict dup/Type 26 put dup/RGBCorrection 12 put/DeviceRenderingInfo exch put setpagedevice"

*XRRGBCorrection AbsoluteC/Colorim<E9>trique absolu: "1 dict dup 2 dict dup/Type 26 put dup/RGBCorrection 13 put/DeviceRenderingInfo exch put setpagedevice"

*XRRGBCorrection None/Aucun(e): ""

*?XRRGBCorrection: "
% TBD
save
  currentpagedevice /DeviceRenderingInfo 2 copy known {
    get dup /Type get 26 eq {
      /RGBCorrection get
      10 dict
      dup 10 (Perceptual) put
      dup 11 (Saturation) put
      dup 12 (RelativeC) put
      dup 13 (AbsoluteC) put
      exch 2 copy known {get} {pop pop (None)} ifelse
    }
    {pop (Unknown)} ifelse
  }
  {pop pop (Unknown)} ifelse
  = flush
restore
"
*End
*CloseUI: *XRRGBCorrection

*OpenUI *XRRGBInputProfile/Profil RVB: PickOne

*OrderDependency: 28.0 AnySetup *XRRGBInputProfile
*DefaultXRRGBInputProfile: SRGB
*XRRGBInputProfile SRGB/sRVB: "1 dict dup 2 dict dup/Type 26 put dup/RGBSpace 0 put/DeviceRenderingInfo exch put setpagedevice"

*XRRGBInputProfile AdobeRGB/Adobe RVB (1998): "1 dict dup 2 dict dup/Type 26 put dup/RGBSpace 1 put/DeviceRenderingInfo exch put setpagedevice"

*?XRRGBInputProfile: "
save
  currentpagedevice /DeviceRenderingInfo 2 copy known {
    get dup /Type get 26 eq {
      /RGBSpace get 
      [(SRGB) (AdobeRGB)] exch get
    }
    {pop (Unknown)} ifelse
  }
  {pop pop (Unknown)} ifelse
  = flush
restore
"
*End
*CloseUI: *XRRGBInputProfile

*OpenUI *XRRGBBCorrection/Correction gamma RVB: PickOne

*OrderDependency: 26.0 AnySetup *XRRGBBCorrection
*DefaultXRRGBBCorrection: Standard
*XRRGBBCorrection Lightest/1.0: "1 dict dup 2 dict dup/Type 26 put dup/GammaCorrection 1 put/DeviceRenderingInfo exch put setpagedevice"

*XRRGBBCorrection Light/1.4: "1 dict dup 2 dict dup/Type 26 put dup/GammaCorrection 2 put/DeviceRenderingInfo exch put setpagedevice"

*XRRGBBCorrection Standard/1.8: "1 dict dup 2 dict dup/Type 26 put dup/GammaCorrection 3 put/DeviceRenderingInfo exch put setpagedevice"

*XRRGBBCorrection Dark/2.2: "1 dict dup 2 dict dup/Type 26 put dup/GammaCorrection 4 put/DeviceRenderingInfo exch put setpagedevice"

*XRRGBBCorrection Darkest/2.6: "1 dict dup 2 dict dup/Type 26 put dup/GammaCorrection 5 put/DeviceRenderingInfo exch put setpagedevice"

*XRRGBBCorrection Off/D<E9>sactiv<E9>(e): "1 dict dup 2 dict dup/Type 26 put dup/GammaCorrection 0 put/DeviceRenderingInfo exch put setpagedevice"

*?XRRGBBCorrection: "
save
  currentpagedevice /DeviceRenderingInfo 2 copy known {
    get dup /Type get 26 eq {
      /GammaCorrection get
      [(Off) (Lightest) (Light) (Standard) (Dark) (Darkest)] exch get
    }
    {pop (Unknown)} ifelse
  }
  {pop pop (Unknown)} ifelse
  = flush
restore
"
*End
*CloseUI: *XRRGBBCorrection

*OpenUI *XRColorTemperature/Temp<E9>rature des couleurs RVB: PickOne

*OrderDependency: 30.0 AnySetup *XRColorTemperature
*DefaultXRColorTemperature: TemperatureD65
*XRColorTemperature TemperatureD50/5000<A0B0>K (D50): "1 dict dup 2 dict dup/Type 26 put dup/WhitePoint 0 put/DeviceRenderingInfo exch put setpagedevice"

*XRColorTemperature TemperatureD65/6500<A0B0>K (D65): "1 dict dup 2 dict dup/Type 26 put dup/WhitePoint 1 put/DeviceRenderingInfo exch put setpagedevice"

*XRColorTemperature Temperature9300K/9300<A0B0>K: "1 dict dup 2 dict dup/Type 26 put dup/WhitePoint 2 put/DeviceRenderingInfo exch put setpagedevice"

*?XRColorTemperature: "
save
  currentpagedevice /DeviceRenderingInfo 2 copy known {
    get dup /Type get 26 eq {
      /WhitePoint get 
      [(TemperatureD50) (TemperatureD65) (Temperature9300K)] exch get
    }
    {pop (Unknown)} ifelse
  }
  {pop pop (Unknown)} ifelse
  = flush
restore
"
*End
*CloseUI: *XRColorTemperature

*OpenUI *XRGrayBalance/Gris garanti: Boolean

*OrderDependency: 28.0 AnySetup *XRGrayBalance
*DefaultXRGrayBalance: True
*XRGrayBalance False/D<E9>sactiv<E9>(e): "1 dict dup 2 dict dup/Type 26 put dup/RGBToK 0 put/DeviceRenderingInfo exch put setpagedevice"

*XRGrayBalance True/Activ<E9>(e): "1 dict dup 2 dict dup/Type 26 put dup/RGBToK 1 put/DeviceRenderingInfo exch put setpagedevice"

*?XRGrayBalance: "
save
  currentpagedevice /DeviceRenderingInfo 2 copy known {
    get dup /Type get 26 eq {
      /RGBToK get
      [(False) (True) (Unknown) (Unknown)] exch get
    }
    {pop (Unknown)} ifelse
  }
  {pop pop (Unknown)} ifelse
  = flush
restore
"
*End
*CloseUI: *XRGrayBalance

*CloseGroup: ColorAdjustment

*OpenGroup: AdvancedMedia/3. Acheminement du support

*OpenUI *XRMSILeadingEdge/Fente d'alimentation manuelle - Orientation: PickOne

*OrderDependency: 100.0 AnySetup *XRMSILeadingEdge
*DefaultXRMSILeadingEdge: ShortEdge
*XRMSILeadingEdge LongEdge/Paysage: "currentpagedevice/ManualFeed get{1 dict dup/LeadingEdge 1 put setpagedevice}if"

*XRMSILeadingEdge ShortEdge/Portrait: "currentpagedevice/ManualFeed get{1 dict dup/LeadingEdge 0 put setpagedevice}if"

*?XRMSILeadingEdge: "
  save
    currentpagedevice /LeadingEdge get dup null eq
    {pop (ShortEdge)}
    {[(ShortEdge)(LongEdge)(ShortEdge)(LongEdge)] exch get} ifelse = flush
  restore
"
*End
*CloseUI: *XRMSILeadingEdge

*OpenUI *Collate/Assembl<E9>: Boolean

*OrderDependency: 15.0 AnySetup *Collate
*DefaultCollate: False
*Collate False/D<E9>sactiv<E9>(e): "1 dict dup/Collate false put setpagedevice"

*Collate True/Activ<E9>(e): "1 dict dup/Collate true put setpagedevice"

*?Collate: "save currentpagedevice/Collate get{(True)}{(False)}ifelse = flush restore"
*CloseUI: *Collate

*OpenUI *MediaType/Type de papier: PickOne

*OrderDependency: 90.0 AnySetup *MediaType
*DefaultMediaType: Default
*MediaType Default/Aucun: ""

*MediaType Stationary/Standard : "1 dict dup/MediaClass(stationary)put setpagedevice"

*MediaType ThickPaper/Support cartonn<E9> fin: "1 dict dup/MediaClass(thick1)put setpagedevice"

*MediaType Prepunched/Perfor<E9>: "1 dict dup/MediaClass(prepunched)put setpagedevice"

*MediaType ThickPaper2/Support cartonn<E9> <E9>pais: "1 dict dup/MediaClass(thick2)put setpagedevice"

*MediaType Letterhead/Papier <E0> en-t<EA>te: "1 dict dup/MediaClass(letterhead)put setpagedevice"

*MediaType LabelPaper/Etiquettes: "1 dict dup/MediaClass(label)put setpagedevice"

*MediaType ColoredPaper/Couleur: "1 dict dup/MediaClass(colored)put setpagedevice"

*MediaType SpecialPaper/Sp<E9>cial: "1 dict dup/MediaClass(special)put setpagedevice"

*MediaType CoatingPaper2/Support cartonn<E9> glac<E9> fin: "1 dict dup/MediaClass(coating2)put setpagedevice"

*MediaType CoatingPaper3/Support cartonn<E9> glac<E9> <E9>pais: "1 dict dup/MediaClass(coating3)put setpagedevice"

*MediaType Envelope/Enveloppe: "1 dict dup/MediaClass(envelope)put setpagedevice"

*?MediaType: "
save
    currentpagedevice /MediaClass get dup null eq {pop (Default)}
    {dup (stationary) eq {pop (Stationary)}
     {dup (thick1) eq {pop (ThickPaper)}
      {dup (prepunched) eq {pop (Prepunched)}
       {dup (thick2) eq{pop (ThickPaper2)}
        {dup (letterhead) eq {pop (Letterhead)}
         {dup (label) eq {pop (LabelPaper)}
          {dup (colored) eq {pop (ColoredPaper)}
           {dup (special) eq {pop (SpecialPaper)}
            {dup (coating2) eq {pop (CoatingPaper2)}
             {dup (coating3) eq {pop (CoatingPaper3)}
              {dup (envelope) eq {pop (Envelope)}
               {(Unknown)} ifelse
              } ifelse
             } ifelse
            } ifelse
           } ifelse
          } ifelse
         } ifelse
        } ifelse
       } ifelse
      } ifelse
     } ifelse
    } ifelse
   = flush
restore
"
*End
*CloseUI: *MediaType


*OpenUI *XRSubPaperSelection/Incompatibilit<E9> format: PickOne

*OrderDependency: 40.0 AnySetup *XRSubPaperSelection
*DefaultXRSubPaperSelection: Policy0
*XRSubPaperSelection Policy0/Utiliser les r<E9>glages de l'imprimante: ""

*XRSubPaperSelection Policy2/Afficher un message: "2 dict dup/Policies 1 dict dup/PageSize 1 put put dup/DeferredMediaSelection true put setpagedevice"

*XRSubPaperSelection Policy3/Utiliser le format le plus proche (Ajuster): "2 dict dup/Policies 1 dict dup/PageSize 3 put put dup/DeferredMediaSelection false put setpagedevice"

*XRSubPaperSelection Policy5/Utiliser le format le plus proche (pas de zoom): "2 dict dup/Policies 1 dict dup/PageSize 5 put put dup/DeferredMediaSelection false put setpagedevice"

*XRSubPaperSelection Policy4/Utiliser un format plus grand (Ajuster): "2 dict dup/Policies 1 dict dup/PageSize 4 put put dup/DeferredMediaSelection false put setpagedevice"

*XRSubPaperSelection Policy6/Utiliser un format plus grand (pas de zoom): "2 dict dup/Policies 1 dict dup/PageSize 6 put put dup/DeferredMediaSelection false put setpagedevice"

*?XRSubPaperSelection: "
  save
  [(Policy0)(Policy2)(Unknown)(Policy3)(Policy4)(Policy5)(Policy6)(Unknown)]
  currentpagedevice /Policies get /PageSize get get = flush
  restore
"
*End
*CloseUI: *XRSubPaperSelection

*OpenUI *XRCustomPageSizeCorrection/Orientation auto des formats personnalis<E9>s: Boolean

*OrderDependency: 1.0 Prolog *XRCustomPageSizeCorrection
*DefaultXRCustomPageSizeCorrection: True
*XRCustomPageSizeCorrection False/D<E9>sactiv<E9>(e): "userdict /4.3PPDCompliant true put"

*XRCustomPageSizeCorrection True/Activ<E9>(e): "userdict /4.3PPDCompliant false put"

*?XRCustomPageSizeCorrection: "
    save
    (Unknown)
    userdict /4.3PPDCompliant known
        {userdict /4.3PPDCompliant get
            {pop (False) }{pop (True)} ifelse
        } if
        = flush
    restore
"
*End
*CloseUI: *XRCustomPageSizeCorrection

*CloseGroup: AdvancedMedia

*OpenGroup: PrinterFunction/4. Options sp<E9>cifiques imprimante

*OpenUI *Smoothing/Am<E9>lioration des images: Boolean

*OrderDependency: 180.0 AnySetup *Smoothing
*DefaultSmoothing: True
*Smoothing False/D<E9>sactiv<E9>(e): "

  2 dict dup /PostRenderingEnhance true put
  dup /PostRenderingEnhanceDetails 2 dict
  dup /Type 32 put
  dup /REValue 0 put
  put setpagedevice
"
*End
*Smoothing True/Activ<E9>(e): "

  2 dict dup /PostRenderingEnhance true put
  dup /PostRenderingEnhanceDetails 2 dict
  dup /Type 32 put
  dup /REValue 1 put
  put setpagedevice
"
*End
*?Smoothing: "
  save
    currentpagedevice /PostRenderingEnhance 2 copy known {
      get {
        currentpagedevice /PostRenderingEnhanceDetails 2 copy known
          { get dup /Type get 32 eq {
             /REValue get 1 eq
             {(True)}{(False)}ifelse
             }
             {pop (Unknown)} ifelse
          }
          { pop pop (Unknown)} ifelse
      }{(False)} ifelse
    }{(Unknown)}ifelse
    = flush
  restore
"
*End
*CloseUI: *Smoothing

*OpenUI *XRTonerSaver/Mode brouillon: Boolean

*OrderDependency: 29.0 AnySetup *XRTonerSaver
*DefaultXRTonerSaver: False
*XRTonerSaver False/D<E9>sactiv<E9>(e): "1 dict dup/PostRenderingEnhanceDetails 2 dict dup/Type 32 put dup/TonerSaver 0 put put setpagedevice"

*XRTonerSaver True/Activ<E9>(e): "1 dict dup/PostRenderingEnhanceDetails 2 dict dup/Type 32 put dup/TonerSaver 1 put put setpagedevice"

*?XRTonerSaver: "
save
  currentpagedevice /PostRenderingEnhanceDetails 2 copy known {
    get dup /Type get 32 eq {
      /TonerSaver get 1 eq
      {(True)}{(False)}ifelse
    }
    {pop (Unknown)} ifelse
  }
  {pop pop (Unknown)} ifelse
  = flush
restore
"
*End
*CloseUI: *XRTonerSaver

*OpenUI *XRSaveBlankSheet/Sauter les pages vierges: Boolean

*OrderDependency: 40.0 AnySetup *XRSaveBlankSheet
*DefaultXRSaveBlankSheet: False
*XRSaveBlankSheet False/D<E9>sactiv<E9>(e): ""

*XRSaveBlankSheet True/Activ<E9>(e): "/FXProcs/ProcSet resourcestatus{/FXProcs/ProcSet findresource/skippage get exec}if pop pop"

*?XRSaveBlankSheet: ""
*CloseUI: *XRSaveBlankSheet

*OpenUI *XRHalftoneMode/Verrouillage des trames de demi-ton: Boolean

*OrderDependency: 40.0 AnySetup *XRHalftoneMode
*DefaultXRHalftoneMode: True
*XRHalftoneMode False/D<E9>sactiv<E9>(e): "<</HalftoneMode 0>>setuserparams"

*XRHalftoneMode True/Activ<E9>(e): "<</HalftoneMode 1>>setuserparams"

*?XRHalftoneMode: "save[(True)(False)]currentuserparams/HalftoneMode get get = flush restore"
*CloseUI: *XRHalftoneMode

*OpenUI *XRMonochromePriority/Plus rapide pour les documents N<2F>B: Boolean

*OrderDependency: 145.0 AnySetup *XRMonochromePriority
*DefaultXRMonochromePriority: False
*XRMonochromePriority False/D<E9>sactiv<E9>(e): "

/Custom /ProcSet resourcestatus
 { pop pop /Custom /ProcSet findresource dup /setprocessmode known
   {/setprocessmode get 1 exch exec}{pop} ifelse
 }if
"
*End
*XRMonochromePriority True/Activ<E9>(e): "

/Custom /ProcSet resourcestatus
 { pop pop /Custom /ProcSet findresource dup /setprocessmode known
   {/setprocessmode get 0 exch exec}{pop} ifelse
 }if
"
*End
*?XRMonochromePriority: "
save
 /Custom /ProcSet resourcestatus
 { pop pop /Custom /ProcSet findresource dup /currentprocessmode known
   {/currentprocessmode get exec 0 eq {(True)}{(False)} ifelse}{pop (Unknown)} ifelse
 }if
 = flush
restore
"
*End
*CloseUI: *XRMonochromePriority

*OpenUI *XRSetTrapMode/Recouvrement: Boolean

*OrderDependency: 160.0 AnySetup *XRSetTrapMode
*DefaultXRSetTrapMode: False
*XRSetTrapMode False/D<E9>sactiv<E9>(e): "

/Custom /ProcSet resourcestatus
 { pop pop /Custom /ProcSet findresource dup /settrapmode known
   {/settrapmode get 1 exch exec}{pop} ifelse
 } if
"
*End
*XRSetTrapMode True/Activ<E9>(e): "

/Custom /ProcSet resourcestatus
 { pop pop /Custom /ProcSet findresource dup /settrapmode known
   {/settrapmode get 0 exch exec}{pop} ifelse
 } if
"
*End
*?XRSetTrapMode: "
save
 /Custom /ProcSet resourcestatus
 { pop pop /Custom /ProcSet findresource dup /currenttrapmode known
   {/currenttrapmode get exec 0 eq {(True)}{(False)} ifelse}{pop (Unknown)} ifelse
 } {(Unknown)} ifelse
 = flush
restore
"
*End
*CloseUI: *XRSetTrapMode

*OpenUI *XRLetterHeadDuplexMode/Mode recto-verso en-t<EA>te: PickOne

*OrderDependency: 147.0 AnySetup *XRLetterHeadDuplexMode
*DefaultXRLetterHeadDuplexMode: DupAuto
*XRLetterHeadDuplexMode DupAuto/Auto: ""

*XRLetterHeadDuplexMode DupOff/D<E9>sactiv<E9>(e): "

/Custom /ProcSet resourcestatus
 { pop pop /Custom /ProcSet findresource dup /setlhduplexmode known
   {/setlhduplexmode get  1  exch exec}{pop} ifelse
 }if
"
*End
*XRLetterHeadDuplexMode DupOn/Activ<E9>(e): "

/Custom /ProcSet resourcestatus
 { pop pop /Custom /ProcSet findresource dup /setlhduplexmode known
   {/setlhduplexmode get  0  exch exec}{pop} ifelse
 }if
"
*End
*?XRLetterHeadDuplexMode: "
save
 /Custom /ProcSet resourcestatus
 { pop pop /Custom /ProcSet findresource dup /currentlhduplexmode known
   {/currentlhduplexmode get exec 0 eq {(DupOn)}{(DupOff)} ifelse}{pop (Unknown)} ifelse
 } {(Unknown)} ifelse
 = flush
restore
"
*End
*CloseUI: *XRLetterHeadDuplexMode

*CloseGroup: PrinterFunction

*% Font Information =====================

*FCacheSize 256Meg: 1258291
*FCacheSize 512Meg: 1258291
*FCacheSize 768Meg: 1258291
*FCacheSize 1280Meg: 1258291

*DefaultFont: Courier

*Font AlbertusMT-Italic: Standard "(001.000)" Standard ROM
*Font AlbertusMT-Light: Standard "(001.000)" Standard ROM
*Font AlbertusMT: Standard "(001.000)" Standard ROM
*Font AntiqueOlive-Bold: Standard "(501.009)" ExtendedRoman ROM
*Font AntiqueOlive-Compact: Standard "(501.008)" ExtendedRoman ROM
*Font AntiqueOlive-Italic: Standard "(501.010)" Standard ROM
*Font AntiqueOlive-Roman: Standard "(501.008)" ExtendedRoman ROM
*Font AntiqueOliveCE-Bold: Win1250 "(501.009)" ExtendedRoman ROM
*Font AntiqueOliveCE-Compact: Win1250 "(501.008)" ExtendedRoman ROM
*Font AntiqueOliveCE-Italic: Win1250 "(501.010)" ExtendedRoman ROM
*Font AntiqueOliveCE-Roman: Win1250 "(501.008)" ExtendedRoman ROM
*Font Apple-Chancery: Standard "(001.001)" ExtendedRoman ROM
*Font Apple-ChanceryCE: Win1250 "(001.001)" ExtendedRoman ROM
*Font Arial-BoldItalicMT: Standard "(501.009)" ExtendedRoman ROM
*Font Arial-BoldMT: Standard "(501.009)" ExtendedRoman ROM
*Font Arial-ItalicMT: Standard "(501.012)" ExtendedRoman ROM
*Font ArialCE-Bold: Win1250 "(501.009)" ExtendedRoman ROM
*Font ArialCE-BoldItalic: Win1250 "(501.009)" ExtendedRoman ROM
*Font ArialCE-Italic: Win1250 "(501.012)" ExtendedRoman ROM
*Font ArialCE: Win1250 "(501.009)" ExtendedRoman ROM
*Font ArialMT: Standard "(501.009)" ExtendedRoman ROM
*Font AvantGarde-Book: Standard "(501.009)" ExtendedRoman ROM
*Font AvantGarde-BookOblique: Standard "(501.009)" ExtendedRoman ROM
*Font AvantGarde-Demi: Standard "(501.010)" ExtendedRoman ROM
*Font AvantGarde-DemiOblique: Standard "(501.010)" ExtendedRoman ROM
*Font AvantGardeCE-Book: Win1250 "(501.009)" ExtendedRoman ROM
*Font AvantGardeCE-BookOblique: Win1250 "(501.009)" ExtendedRoman ROM
*Font AvantGardeCE-Demi: Win1250 "(501.010)" ExtendedRoman ROM
*Font AvantGardeCE-DemiOblique: Win1250 "(501.010)" ExtendedRoman ROM
*Font Bodoni-Bold: Standard "(501.006)" ExtendedRoman ROM
*Font Bodoni-BoldItalic: Standard "(501.007)" ExtendedRoman ROM
*Font Bodoni-Italic: Standard "(501.007)" ExtendedRoman ROM
*Font Bodoni-Poster: Standard "(501.009)" ExtendedRoman ROM
*Font Bodoni-PosterCompressed: Standard "(501.007)" ExtendedRoman ROM
*Font Bodoni: Standard "(501.008)" ExtendedRoman ROM
*Font BodoniCE-Bold: Win1250 "(501.006)" ExtendedRoman ROM
*Font BodoniCE-BoldItalic: Win1250 "(501.007)" ExtendedRoman ROM
*Font BodoniCE-Italic: Win1250 "(501.007)" ExtendedRoman ROM
*Font BodoniCE-Poster: Win1250 "(501.009)" ExtendedRoman ROM
*Font BodoniCE-PosterCompressed: Win1250 "(501.007)" ExtendedRoman ROM
*Font BodoniCE: Win1250 "(501.008)" ExtendedRoman ROM
*Font Bookman-Demi: Standard "(501.007)" ExtendedRoman ROM
*Font Bookman-DemiItalic: Standard "(501.008)" ExtendedRoman ROM
*Font Bookman-Light: Standard "(501.006)" ExtendedRoman ROM
*Font Bookman-LightItalic: Standard "(501.007)" ExtendedRoman ROM
*Font BookmanCE-Demi: Win1250 "(501.007)" ExtendedRoman ROM
*Font BookmanCE-DemiItalic: Win1250 "(501.008)" ExtendedRoman ROM
*Font BookmanCE-Light: Win1250 "(501.006)" ExtendedRoman ROM
*Font BookmanCE-LightItalic: Win1250 "(501.007)" ExtendedRoman ROM
*Font Carta: Special "(001.001)" Special ROM
*Font Chicago: Standard "(501.011)" ExtendedRoman ROM
*Font ChicagoCE: Win1250 "(501.011)" ExtendedRoman ROM
*Font Clarendon-Bold: Standard "(501.008)" ExtendedRoman ROM
*Font Clarendon-Light: Standard "(501.009)" ExtendedRoman ROM
*Font Clarendon: Standard "(501.009)" ExtendedRoman ROM
*Font ClarendonCE-Bold: Win1250 "(501.008)" ExtendedRoman ROM
*Font ClarendonCE-Light: Win1250 "(501.009)" ExtendedRoman ROM
*Font ClarendonCE: Win1250 "(501.009)" ExtendedRoman ROM
*Font CooperBlack-Italic: Standard "(001.003)" Standard ROM
*Font CooperBlack: Standard "(001.003)" Standard ROM
*Font Copperplate-ThirtyThreeBC: Standard "(001.002)" Standard ROM
*Font Copperplate-ThirtyTwoBC: Standard "(001.002)" Standard ROM
*Font Coronet-Regular: Standard "(001.000)" ExtendedRoman ROM
*Font CoronetCE-Regular: Win1250 "(001.000)" ExtendedRoman ROM
*Font Courier-Bold: Standard "(501.010)" ExtendedRoman ROM
*Font Courier-BoldOblique: Standard "(501.010)" ExtendedRoman ROM
*Font Courier-Oblique: Standard "(501.010)" ExtendedRoman ROM
*Font Courier: Standard "(501.010)" ExtendedRoman ROM
*Font CourierCE-Bold: Win1250 "(501.010)" ExtendedRoman ROM
*Font CourierCE-BoldOblique: Win1250 "(501.010)" ExtendedRoman ROM
*Font CourierCE-Oblique: Win1250 "(501.010)" ExtendedRoman ROM
*Font CourierCE: Win1250 "(501.010)" ExtendedRoman ROM
*Font Eurostile-Bold: Standard "(501.008)" ExtendedRoman ROM
*Font Eurostile-BoldExtendedTwo: Standard "(501.008)" ExtendedRoman ROM
*Font Eurostile-ExtendedTwo: Standard "(501.010)" ExtendedRoman ROM
*Font Eurostile: Standard "(501.008)" ExtendedRoman ROM
*Font EurostileCE-Bold: Win1250 "(501.008)" ExtendedRoman ROM
*Font EurostileCE-BoldExtendedTwo: Win1250 "(501.008)" ExtendedRoman ROM
*Font EurostileCE-ExtendedTwo: Win1250 "(501.010)" ExtendedRoman ROM
*Font EurostileCE: Win1250 "(501.008)" ExtendedRoman ROM
*Font Geneva: Standard "(501.007)" ExtendedRoman ROM
*Font GenevaCE: Win1250 "(501.007)" ExtendedRoman ROM
*Font GillSans-Bold: Standard "(501.007)" ExtendedRoman ROM
*Font GillSans-BoldCondensed: Standard "(501.006)" ExtendedRoman ROM
*Font GillSans-BoldItalic: Standard "(501.008)" ExtendedRoman ROM
*Font GillSans-Condensed: Standard "(501.007)" ExtendedRoman ROM
*Font GillSans-ExtraBold: Standard "(501.008)" ExtendedRoman ROM
*Font GillSans-Italic: Standard "(501.008)" ExtendedRoman ROM
*Font GillSans-Light: Standard "(501.009)" ExtendedRoman ROM
*Font GillSans-LightItalic: Standard "(501.009)" ExtendedRoman ROM
*Font GillSans: Standard "(501.009)" ExtendedRoman ROM
*Font GillSansCE-Bold: Win1250 "(501.007)" ExtendedRoman ROM
*Font GillSansCE-BoldCondensed: Win1250 "(501.006)" ExtendedRoman ROM
*Font GillSansCE-BoldItalic: Win1250 "(501.008)" ExtendedRoman ROM
*Font GillSansCE-Condensed: Win1250 "(501.007)" ExtendedRoman ROM
*Font GillSansCE-ExtraBold: Win1250 "(501.008)" ExtendedRoman ROM
*Font GillSansCE-Italic: Win1250 "(501.008)" ExtendedRoman ROM
*Font GillSansCE-Light: Win1250 "(501.009)" ExtendedRoman ROM
*Font GillSansCE-LightItalic: Win1250 "(501.009)" ExtendedRoman ROM
*Font GillSansCE-Roman: Win1250 "(501.009)" ExtendedRoman ROM
*Font Goudy-Bold: Standard "(001.002)" Standard ROM
*Font Goudy-BoldItalic: Standard "(001.002)" Standard ROM
*Font Goudy-ExtraBold: Standard "(001.001)" Standard ROM
*Font Goudy-Italic: Standard "(001.002)" Standard ROM
*Font Goudy: Standard "(001.003)" Standard ROM
*Font Helvetica-Bold: Standard "(501.010)" ExtendedRoman ROM
*Font Helvetica-BoldOblique: Standard "(501.010)" ExtendedRoman ROM
*Font Helvetica-Condensed-Bold: Standard "(501.009)" ExtendedRoman ROM
*Font Helvetica-Condensed-BoldObl: Standard "(501.009)" ExtendedRoman ROM
*Font Helvetica-Condensed-Oblique: Standard "(501.010)" ExtendedRoman ROM
*Font Helvetica-Condensed: Standard "(501.010)" ExtendedRoman ROM
*Font Helvetica-Narrow-Bold: Standard "(501.010)" ExtendedRoman ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(501.010)" ExtendedRoman ROM
*Font Helvetica-Narrow-Oblique: Standard "(501.008)" ExtendedRoman ROM
*Font Helvetica-Narrow: Standard "(501.008)" ExtendedRoman ROM
*Font Helvetica-Oblique: Standard "(501.008)" ExtendedRoman ROM
*Font Helvetica: Standard "(501.008)" ExtendedRoman ROM
*Font HelveticaCE-Bold: Win1250 "(501.010)" ExtendedRoman ROM
*Font HelveticaCE-BoldOblique: Win1250 "(501.010)" ExtendedRoman ROM
*Font HelveticaCE-Cond: Win1250 "(501.010)" ExtendedRoman ROM
*Font HelveticaCE-CondBold: Win1250 "(501.009)" ExtendedRoman ROM
*Font HelveticaCE-CondBoldObl: Win1250 "(501.009)" ExtendedRoman ROM
*Font HelveticaCE-CondObl: Win1250 "(501.010)" ExtendedRoman ROM
*Font HelveticaCE-Narrow: Win1250 "(501.008)" ExtendedRoman ROM
*Font HelveticaCE-NarrowBold: Win1250 "(501.010)" ExtendedRoman ROM
*Font HelveticaCE-NarrowBoldOblique: Win1250 "(501.010)" ExtendedRoman ROM
*Font HelveticaCE-NarrowOblique: Win1250 "(501.008)" ExtendedRoman ROM
*Font HelveticaCE-Oblique: Win1250 "(501.008)" ExtendedRoman ROM
*Font HelveticaCE: Win1250 "(501.008)" ExtendedRoman ROM
*Font HoeflerText-Black: Standard "(501.008)" ExtendedRoman ROM
*Font HoeflerText-BlackItalic: Standard "(501.009)" ExtendedRoman ROM
*Font HoeflerText-Italic: Standard "(501.010)" ExtendedRoman ROM
*Font HoeflerText-Ornaments: Special "(001.001)" Special ROM
*Font HoeflerText-Regular: Standard "(501.009)" ExtendedRoman ROM
*Font HoeflerTextCE-Black: Win1250 "(501.008)" ExtendedRoman ROM
*Font HoeflerTextCE-BlackItalic: Win1250 "(501.009)" ExtendedRoman ROM
*Font HoeflerTextCE-Italic: Win1250 "(501.010)" ExtendedRoman ROM
*Font HoeflerTextCE-Regular: Win1250 "(501.009)" ExtendedRoman ROM
*Font JoannaMT-Bold: Standard "(501.008)" ExtendedRoman ROM
*Font JoannaMT-BoldItalic: Standard "(501.008)" ExtendedRoman ROM
*Font JoannaMT-Italic: Standard "(501.008)" ExtendedRoman ROM
*Font JoannaMT: Standard "(501.009)" ExtendedRoman ROM
*Font JoannaMTCE-Bold: Win1250 "(501.008)" ExtendedRoman ROM
*Font JoannaMTCE-BoldItalic: Win1250 "(501.008)" ExtendedRoman ROM
*Font JoannaMTCE-Italic: Win1250 "(501.008)" ExtendedRoman ROM
*Font JoannaMTCE: Win1250 "(501.009)" ExtendedRoman ROM
*Font LetterGothic-Bold: Standard "(501.010)" ExtendedRoman ROM
*Font LetterGothic-BoldSlanted: Standard "(501.010)" ExtendedRoman ROM
*Font LetterGothic-Slanted: Standard "(501.010)" ExtendedRoman ROM
*Font LetterGothic: Standard "(501.009)" ExtendedRoman ROM
*Font LetterGothicCE-Bold: Win1250 "(501.010)" ExtendedRoman ROM
*Font LetterGothicCE-BoldSlanted: Win1250 "(501.010)" ExtendedRoman ROM
*Font LetterGothicCE-Slanted: Win1250 "(501.010)" ExtendedRoman ROM
*Font LetterGothicCE: Win1250 "(501.009)" ExtendedRoman ROM
*Font LubalinGraph-Book: Standard "(501.009)" ExtendedRoman ROM
*Font LubalinGraph-BookOblique: Standard "(501.009)" ExtendedRoman ROM
*Font LubalinGraph-Demi: Standard "(501.009)" ExtendedRoman ROM
*Font LubalinGraph-DemiOblique: Standard "(501.009)" ExtendedRoman ROM
*Font LubalinGraphCE-Book: Win1250 "(501.009)" ExtendedRoman ROM
*Font LubalinGraphCE-BookOblique: Win1250 "(501.009)" ExtendedRoman ROM
*Font LubalinGraphCE-Demi: Win1250 "(501.009)" ExtendedRoman ROM
*Font LubalinGraphCE-DemiOblique: Win1250 "(501.009)" ExtendedRoman ROM
*Font Marigold: Standard "(001.000)" Standard ROM
*Font MonaLisa-Recut: Standard "(001.000)" Standard ROM
*Font Monaco: Standard "(501.012)" ExtendedRoman ROM
*Font MonacoCE: Win1250 "(501.012)" ExtendedRoman ROM
*Font NewCenturySchlbk-Bold: Standard "(501.008)" ExtendedRoman ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(501.009)" ExtendedRoman ROM
*Font NewCenturySchlbk-Italic: Standard "(501.011)" ExtendedRoman ROM
*Font NewCenturySchlbk-Roman: Standard "(501.008)" ExtendedRoman ROM
*Font NewCenturySchlbkCE-Bold: Win1250 "(501.008)" ExtendedRoman ROM
*Font NewCenturySchlbkCE-BoldItalic: Win1250 "(501.009)" ExtendedRoman ROM
*Font NewCenturySchlbkCE-Italic: Win1250 "(501.011)" ExtendedRoman ROM
*Font NewCenturySchlbkCE-Roman: Win1250 "(501.008)" ExtendedRoman ROM
*Font NewYork: Standard "(501.013)" ExtendedRoman ROM
*Font NewYorkCE: Win1250 "(501.013)" ExtendedRoman ROM
*Font Optima-Bold: Standard "(501.008)" ExtendedRoman ROM
*Font Optima-BoldItalic: Standard "(501.009)" ExtendedRoman ROM
*Font Optima-Italic: Standard "(501.010)" ExtendedRoman ROM
*Font Optima: Standard "(501.010)" ExtendedRoman ROM
*Font OptimaCE-Bold: Win1250 "(501.008)" ExtendedRoman ROM
*Font OptimaCE-BoldItalic: Win1250 "(501.009)" ExtendedRoman ROM
*Font OptimaCE-Italic: Win1250 "(501.010)" ExtendedRoman ROM
*Font OptimaCE-Roman: Win1250 "(501.010)" ExtendedRoman ROM
*Font Oxford: Standard "(001.000)" Standard ROM
*Font Palatino-Bold: Standard "(501.008)" ExtendedRoman ROM
*Font Palatino-BoldItalic: Standard "(501.007)" ExtendedRoman ROM
*Font Palatino-Italic: Standard "(501.008)" ExtendedRoman ROM
*Font Palatino-Roman: Standard "(501.006)" ExtendedRoman ROM
*Font PalatinoCE-Bold: Win1250 "(501.008)" ExtendedRoman ROM
*Font PalatinoCE-BoldItalic: Win1250 "(501.007)" ExtendedRoman ROM
*Font PalatinoCE-Italic: Win1250 "(501.008)" ExtendedRoman ROM
*Font PalatinoCE-Roman: Win1250 "(501.006)" ExtendedRoman ROM
*Font StempelGaramond-Bold: Standard "(501.007)" ExtendedRoman ROM
*Font StempelGaramond-BoldItalic: Standard "(501.012)" ExtendedRoman ROM
*Font StempelGaramond-Italic: Standard "(501.009)" ExtendedRoman ROM
*Font StempelGaramond-Roman: Standard "(501.011)" ExtendedRoman ROM
*Font StempelGaramondCE-Bold: Win1250 "(501.007)" ExtendedRoman ROM
*Font StempelGaramondCE-BoldItalic: Win1250 "(501.012)" ExtendedRoman ROM
*Font StempelGaramondCE-Italic: Win1250 "(501.009)" ExtendedRoman ROM
*Font StempelGaramondCE-Roman: Win1250 "(501.011)" ExtendedRoman ROM
*Font Symbol: Special "(001.008)" Special ROM
*Font Tekton: Standard "(001.001)" Standard ROM
*Font Times-Bold: Standard "(501.009)" ExtendedRoman ROM
*Font Times-BoldItalic: Standard "(501.009)" ExtendedRoman ROM
*Font Times-Italic: Standard "(501.010)" ExtendedRoman ROM
*Font Times-Roman: Standard "(501.010)" ExtendedRoman ROM
*Font TimesCE-Bold: Win1250 "(501.009)" ExtendedRoman ROM
*Font TimesCE-BoldItalic: Win1250 "(501.009)" ExtendedRoman ROM
*Font TimesCE-Italic: Win1250 "(501.010)" ExtendedRoman ROM
*Font TimesCE-Roman: Win1250 "(501.010)" ExtendedRoman ROM
*Font TimesNewRomanCE-Bold: Win1250 "(501.009)" ExtendedRoman ROM
*Font TimesNewRomanCE-BoldItalic: Win1250 "(501.011)" ExtendedRoman ROM
*Font TimesNewRomanCE-Italic: Win1250 "(501.011)" ExtendedRoman ROM
*Font TimesNewRomanCE: Win1250 "(501.010)" ExtendedRoman ROM
*Font TimesNewRomanPS-BoldItalicMT: Standard "(501.011)" ExtendedRoman ROM
*Font TimesNewRomanPS-BoldMT: Standard "(501.009)" ExtendedRoman ROM
*Font TimesNewRomanPS-ItalicMT: Standard "(501.011)" ExtendedRoman ROM
*Font TimesNewRomanPSMT: Standard "(501.010)" ExtendedRoman ROM
*Font Univers-Bold: Standard "(501.008)" ExtendedRoman ROM
*Font Univers-BoldExt: Standard "(501.010)" ExtendedRoman ROM
*Font Univers-BoldExtObl: Standard "(501.010)" ExtendedRoman ROM
*Font Univers-BoldOblique: Standard "(501.008)" ExtendedRoman ROM
*Font Univers-Condensed: Standard "(501.011)" ExtendedRoman ROM
*Font Univers-CondensedBold: Standard "(501.009)" ExtendedRoman ROM
*Font Univers-CondensedBoldOblique: Standard "(501.009)" ExtendedRoman ROM
*Font Univers-CondensedOblique: Standard "(501.011)" ExtendedRoman ROM
*Font Univers-Extended: Standard "(501.009)" ExtendedRoman ROM
*Font Univers-ExtendedObl: Standard "(501.009)" ExtendedRoman ROM
*Font Univers-Light: Standard "(501.009)" ExtendedRoman ROM
*Font Univers-LightOblique: Standard "(501.009)" ExtendedRoman ROM
*Font Univers-Oblique: Standard "(501.009)" ExtendedRoman ROM
*Font Univers: Standard "(501.009)" ExtendedRoman ROM
*Font UniversCE-Bold: Win1250 "(501.008)" ExtendedRoman ROM
*Font UniversCE-BoldExt: Win1250 "(501.010)" ExtendedRoman ROM
*Font UniversCE-BoldExtObl: Win1250 "(501.010)" ExtendedRoman ROM
*Font UniversCE-BoldOblique: Win1250 "(501.008)" ExtendedRoman ROM
*Font UniversCE-Condensed: Win1250 "(501.011)" ExtendedRoman ROM
*Font UniversCE-CondensedBold: Win1250 "(501.009)" ExtendedRoman ROM
*Font UniversCE-CondensedBoldOblique: Win1250 "(501.009)" ExtendedRoman ROM
*Font UniversCE-CondensedOblique: Win1250 "(501.011)" ExtendedRoman ROM
*Font UniversCE-Extended: Win1250 "(501.009)" ExtendedRoman ROM
*Font UniversCE-ExtendedObl: Win1250 "(501.009)" ExtendedRoman ROM
*Font UniversCE-Light: Win1250 "(501.009)" ExtendedRoman ROM
*Font UniversCE-LightOblique: Win1250 "(501.009)" ExtendedRoman ROM
*Font UniversCE-Medium: Win1250 "(501.009)" ExtendedRoman ROM
*Font UniversCE-Oblique: Win1250 "(501.009)" ExtendedRoman ROM
*Font Wingdings-Regular: Special "(001.001)" Special ROM
*Font ZapfChancery-MediumItalic: Standard "(002.000)" ExtendedRoman ROM
*Font ZapfChanceryCE-MediumItalic: Win1250 "(002.000)" ExtendedRoman ROM
*Font ZapfDingbats: Special "(001.005S)" Special ROM
*?FontQuery: "
 save
   { count 1 gt
      { exch dup 127 string cvs (/)
        print print (:) print
        /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
      } { exit } ifelse
   } bind loop
   (*) = flush
 restore
"
*End

*?FontList: "
save
  (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ] %%)
*Status: "busy"
*Status: "idle"
*Status: "initializing"
*Status: "PrinterError"
*Status: "PrinterError: belt error"
*Status: "PrinterError: belt life over"
*Status: "PrinterError: belt out"
*Status: "PrinterError: cover open"
*Status: "PrinterError: disk full"
*Status: "PrinterError: download error"
*Status: "PrinterError: error"
*Status: "PrinterError: fuser error"
*Status: "PrinterError: fuser life over"
*Status: "PrinterError: fuser out"
*Status: "PrinterError: memory full"
*Status: "PrinterError: no paper"
*Status: "PrinterError: no paper tray"
*Status: "PrinterError: NVRAM malfunction"
*Status: "PrinterError: paper jam"
*Status: "PrinterError: paper size mismatch"
*Status: "PrinterError: service call"
*Status: "PrinterError: toner error"
*Status: "PrinterError: toner life over"
*Status: "PrinterError: toner out"
*Status: "PrinterError: toner over"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "USB"
*Source: "LPR"
*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "belt error"
*PrinterError: "belt life over"
*PrinterError: "belt out"
*PrinterError: "cover open"
*PrinterError: "disk full"
*PrinterError: "download error"
*PrinterError: "error"
*PrinterError: "fuser error"
*PrinterError: "fuser life over"
*PrinterError: "fuser out"
*PrinterError: "memory full"
*PrinterError: "no paper"
*PrinterError: "no paper tray"
*PrinterError: "NVRAM malfunction"
*PrinterError: "paper jam"
*PrinterError: "paper size mismatch"
*PrinterError: "service call"
*PrinterError: "toner error"
*PrinterError: "toner life over"
*PrinterError: "toner out"
*PrinterError: "toner over"

*% Color Separation Information =====================
*%*DefaultGuaranteedMaxSeparations: 1
*%*GuaranteedMaxSeparations 4: ""
*%*GuaranteedMaxSeparations 3: ""
*%*GuaranteedMaxSeparations 2: ""
*%*GuaranteedMaxSeparations 1: ""
*%*?GuaranteedMaxSeparations: "
*%    currentpagedevice /MaxSeparations get ="
*%*End


*% end of PPD file

